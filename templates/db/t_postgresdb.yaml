Description:  >
    This template deploys a Postgres DB spread across multiple
    Availability Zones

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    DBInstanceClass:
        Description: Which DB instance type should we use to build the AWS RDS?
        Type: String
        Default: db.t2.micro
    
    DBName:
        Description: The Name of the DB
        Type: String
        
    MyDBSubnets:
        Description: "Subnets to launch RDS DBs into"
        Type: "List<AWS::EC2::Subnet::Id>"

    #We are only using one security group for this so no list
    DatabaseSecurityGroup:
        Description: DataBase Security Group the DB should use.
        Type: AWS::EC2::SecurityGroup::Id

    DBMasterUsername:
        Description: the user used to connect to the database server
        Type: String
        Default: postgres

    DBMasterUserPassword:
        Description: the password used to connect to the database server
        Type: String
        Default: changeme

    DBPort:
        Description: port to connect to the database server on
        Type: String
        Default: 5432

Resources:
    MyDB:
      Type: AWS::RDS::DBInstance
      Properties:
        AllocatedStorage: '100'
        BackupRetentionPeriod: '5'
        DBInstanceClass: db.t2.micro
        DBSubnetGroupName: !Ref MyDBSubnetGroup
        Engine: Postgres
        #Iops: '1000'
        MasterUsername: !Ref DBMasterUsername
        MasterUserPassword: !Ref DBMasterUserPassword
        MultiAZ: 'true'
        Port:  !Ref DBPort
        StorageType: 'gp2'
        Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-Postgres-DB
        VPCSecurityGroups: 
                - !Ref DatabaseSecurityGroup
        #EngineVersion: String
        #LicenseModel: String
        #OptionGroupName: String
        #PreferredBackupWindow: String
        #PreferredMaintenanceWindow: String

    MyDBSubnetGroup:
      Type: AWS::RDS::DBSubnetGroup
      Properties:
        DBSubnetGroupDescription: !Sub "${EnvironmentName} RDS DB subnet group"
        SubnetIds: !Ref MyDBSubnets
        Tags:
            - Key: Name
              Value: !Sub ${EnvironmentName} DbSubnetGroup

Outputs:
    InstanceID:
      Description: "RDS Database Instance ID"
      Value: !Ref MyDB

    RdsDbURL:
      Description: "RDS Database URL"
      Value: !GetAtt "MyDB.Endpoint.Address"

    VTTDBHOST:
      Description: "host to connect to, ip or dns entry"
      Value: !GetAtt "MyDB.Endpoint.Address"

    VTTLISTENHOST:
      Description: "listener configuration for the application, 0.0.0.0 for all IP, or specify ip to listen on"
      Value: 0.0.0.0

    VTTLISTENPORT:
      Description: "port to bind on the local server"
      Value: 3000

    DBPort:
      Description: "RDS Database Port"
      Value: !Ref DBPort

