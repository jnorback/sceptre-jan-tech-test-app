Description: >
    This template contains the security groups required by our entire stack.
    We create them in a seperate nested template, so they can be referenced
    by all of the other nested templates.

Parameters:
    
    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
    
    VPC:
        Type: AWS::EC2::VPC::Id
        Description: Choose which VPC the security groups should be deployed to

Resources:

    # This security group defines who/where is allowed to access the ECS hosts directly.
    # By default we're just allowing access from the load balancer.  If you want to SSH 
    # into the hosts, or expose non-load balanced services you can open their ports here.
    ECSHostSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties: 
            VpcId: !Ref VPC
            GroupDescription: Access to the ECS hosts and the tasks/containers that run on them
            SecurityGroupIngress:
                # Only allow inbound access to ECS from the ELB
                - SourceSecurityGroupId: !Ref LoadBalancerSecurityGroup 
                  IpProtocol: -1
            Tags: 
                - Key: Name
                  Value: !Sub ${EnvironmentName}-ECS-Hosts

    # This security group defines who/where is allowed to access the Application Load Balancer.
    # By default, we've opened this up to the public internet (0.0.0.0/0) but can you restrict
    # it further if you want.
    # Restricted to only allow HTTP and HTTPS
    LoadBalancerSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties: 
            VpcId: !Ref VPC
            GroupDescription: Access to the load balancer that sits in front of ECS
            SecurityGroupIngress:
                # Allow access from anywhere to our ECS services for port 80 http
                - CidrIp: 0.0.0.0/0
                  FromPort: '80'
                  ToPort:   '80'
                  IpProtocol: tcp
                # Allow access from anywhere to our ECS services for port 443 https
                - CidrIp: 0.0.0.0/0
                  FromPort: '443'
                  ToPort:   '443'
                  IpProtocol: tcp
            Tags: 
                - Key: Name
                  Value: !Sub ${EnvironmentName}-LoadBalancers
    
    # This security group is purely for testing
    # By default, we've opened this up to the public internet (0.0.0.0/0) but can you restrict
    # it further if you want.
    # Restricted to only allow Postgres 5432, SSH, HTTP and HTTPS
    TestingSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties: 
            VpcId: !Ref VPC
            GroupDescription: Testing only Access for all in one securitygroup (not for production) 
            SecurityGroupIngress:
                # Allow access from anywhere to our ECS services for port 80 http
                - CidrIp: 0.0.0.0/0
                  FromPort: '80'
                  ToPort:   '80'
                  IpProtocol: tcp
                # Allow access from anywhere to our ECS services for port 443 https
                - CidrIp: 0.0.0.0/0
                  FromPort: '443'
                  ToPort:   '443'
                  IpProtocol: tcp
                # Allow access from anywhere to our ECS services for port 22 ssh
                - CidrIp: 0.0.0.0/0
                  FromPort: '22'
                  ToPort:   '22'
                  IpProtocol: tcp  
                # Allow inbound access to DB on port 5432
                - CidrIp: 0.0.0.0/0
                  FromPort: '5432'
                  ToPort:   '5432'
                  IpProtocol: tcp
 
            Tags: 
                - Key: Name
                  Value: !Sub ${EnvironmentName}-Testing

    # This security group defines who/where is allowed to access the Database 
    # Restricted to only allow HTTP and HTTPS
    DatabaseSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties: 
            VpcId: !Ref VPC
            GroupDescription: Access to the DB from the ECS EC2 instances
            SecurityGroupIngress:
                # Only allow inbound access to DB from ECS on port 5432
                - SourceSecurityGroupId: !Ref ECSHostSecurityGroup
                  FromPort: '5432'
                  ToPort:   '5432'
                  IpProtocol: tcp
            Tags: 
                - Key: Name
                  Value: !Sub ${EnvironmentName}-Database

Outputs:

    ECSHostSecurityGroup: 
        Description: A reference to the security group for ECS hosts
        Value: !Ref ECSHostSecurityGroup

    LoadBalancerSecurityGroup:
        Description: A reference to the security group for load balancers
        Value: !Ref LoadBalancerSecurityGroup

    DatabaseSecurityGroup:
        Description: A reference to the security group for the Database
        Value: !Ref DatabaseSecurityGroup

    TestingSecurityGroup:
        Description: A security group only for testing allowing SSH and all environment in one group
        Value: !Ref TestingSecurityGroup
